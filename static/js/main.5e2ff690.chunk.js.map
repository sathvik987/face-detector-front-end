{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceList.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceList","box","length","map","boundingBox","key","topRow","top","right","rightCol","bottom","bottomRow","left","leftCol","FaceRecognition","imageUrl","id","Rank","name","entries","Signin","props","onEnter","event","onSubmitSignIn","onEmailChange","setState","signInEmail","target","value","onPasswordChange","signInPassword","fetch","method","headers","body","JSON","stringify","email","state","password","then","res","json","user","loadUser","this","htmlFor","onKeyPress","React","Component","Register","onNameChange","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","outputs","regions","element","bounding_box","region_info","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","response","count","Object","assign","catch","console","log","err","status","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5e2ff690.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n    if (isSignedIn) {\n        return (\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n            </nav>\n        );\n    } else {\n        return (\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n            </nav>\n        );\n    }\n}\n\n\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brain.5ed43642.png\";","import React from 'react';\nimport Tilt from 'react-tilt'\nimport brain from './brain.png';\nimport './Logo.css';\n\nconst Logo = () => {\n    return (\n        <div className='ma4 mt0'>\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 35 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner pa3\">\n                    <img src={brain} alt='brain' />\n                </div>\n            </Tilt>\n        </div>\n    );\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n    return (\n        <div>\n            <p className='f3'>{'This magic brain will detect faces in your pictures.'}</p>\n            <div className='center'>\n                <div className='form center pa4 br3 shadow-5'>\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\n                        onClick={onButtonSubmit}>Detect</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ImageLinkForm;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceList = ({ box }) => {\n    if (box.length > 0) {\n        return (\n            box.map((boundingBox) => {\n                return (\n                    <div key={boundingBox.topRow} className='bounding-box'\n                        style={{ top: boundingBox.topRow, right: boundingBox.rightCol, bottom: boundingBox.bottomRow, left: boundingBox.leftCol }}>\n                    </div>\n                );\n            })\n        );\n    } else {\n        return (<div></div>);\n    }\n\n}\n\nexport default FaceList;","import React from 'react';\nimport './FaceRecognition.css';\nimport FaceList from './FaceList';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n    return (\n        <div className='center ma'>\n            <div className='absolute mt2'>\n                <img id='inputimage' src={imageUrl} alt='' width='500px' height='auto' />\n                <FaceList box={box} />\n            </div>\n        </div>\n    );\n}\n\nexport default FaceRecognition;","import React from 'react';\n\nconst Rank = ({ name, entries }) => {\n    return (\n        <div>\n            <div className='white f3'>\n                {`${name}, your current entry count is.. `}\n            </div>\n            <div className='white f1'>\n                {entries}\n            </div>\n\n        </div>\n    );\n}\n\nexport default Rank;","import React from 'react';\n\nclass Signin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signInPassword: ''\n\n        }\n    }\n    onEnter = (event) => {\n        if (event.key === \"Enter\") {\n            this.onSubmitSignIn();\n        }\n    }\n    onEmailChange = (event) => {\n        this.setState({ signInEmail: event.target.value })\n    }\n    onPasswordChange = (event) => {\n        this.setState({ signInPassword: event.target.value })\n    }\n    onSubmitSignIn = () => {\n        fetch('https://fathomless-ravine-65932.herokuapp.com/signin', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n\n        }).then(res => res.json())\n            .then(user => {\n                if (user.email) {\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');\n                }\n            })\n    }\n    render() {\n        const { onRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\" >\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input onChange={this.onEmailChange} onKeyPress={this.onEnter} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"email\" name=\"email-address\" id=\"email-address\" />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input onChange={this.onPasswordChange} onKeyPress={this.onEnter} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"password\" name=\"password\" id=\"password\" />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input onClick={this.onSubmitSignIn}\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                                type=\"submit\" value=\"Sign in\" />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n                        </div>\n                    </div>\n                </main>\n            </article>\n        );\n    }\n}\n\nexport default Signin;","import React from 'react';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n    onEnter = (event) => {\n        if (event.key === \"Enter\") {\n            this.onSubmitSignIn();\n        }\n    }\n    onNameChange = (event) => {\n        this.setState({ name: event.target.value })\n    }\n    onEmailChange = (event) => {\n        this.setState({ email: event.target.value })\n    }\n    onPasswordChange = (event) => {\n        this.setState({ password: event.target.value })\n    }\n    onSubmitSignIn = () => {\n        fetch('https://fathomless-ravine-65932.herokuapp.com/register', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n\n        }).then(res => res.json())\n            .then(user => {\n                if (user.email) {\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');\n                }\n            })\n    }\n\n    render() {\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\" >\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                                <input onChange={this.onNameChange} onKeyPress={this.onEnter} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"text\" name=\"name\" id=\"name\" />\n                            </div>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input onChange={this.onEmailChange} onKeyPress={this.onEnter} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"email\" name=\"email-address\" id=\"email-address\" />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input onChange={this.onPasswordChange} onKeyPress={this.onEnter} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"password\" name=\"password\" id=\"password\" />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input onClick={this.onSubmitSignIn}\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                                type=\"submit\" value=\"Register\" />\n                        </div>\n                    </div>\n                </main>\n            </article>\n        );\n    }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    fetch('https://fathomless-ravine-65932.herokuapp.com/').then(res => console.log(res.status))\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions;\n    const box = clarifaiFace.map(element => {\n      const bounding_box = element.region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: bounding_box.left_col * width,\n        topRow: bounding_box.top_row * height,\n        rightCol: width - (bounding_box.right_col * width),\n        bottomRow: height - (bounding_box.bottom_row * height)\n      }\n    });\n    return box\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    fetch('https://fathomless-ravine-65932.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    }).then(response => response.json())\n      .then(response => {\n        if (response.outputs) {\n          fetch('https://fathomless-ravine-65932.herokuapp.com/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            }).catch(console.log)\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  }\n\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        {route === 'home'\n          ? <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n          : (\n            route === 'signin'\n              ? <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n              : <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n\n  <App />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}